{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"URL": {
				"type": "string",
				"example": "https://example.com/example",
				"format": "uri",
				"description": "URL format.",
				"pattern": "^(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$"
			},
			"LongString": {
				"type": "string",
				"minLength": 2,
				"maxLength": 300
			},
			"GetItemPicUrlOut": {
				"properties": {
					"itemPicUrl": {
						"$ref": "#/components/schemas/URL"
					},
					"itemPicKey": {
						"$ref": "#/components/schemas/LongString"
					}
				},
				"required": [
					"itemPicUrl",
					"itemPicKey"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UUID": {
				"type": "string",
				"example": "52907745-7672-470e-a803-a2f8feb52944",
				"format": "uuid",
				"description": "Stringified UUIDv4.\r\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
				"pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
			},
			"ImageFilename": {
				"type": "string",
				"example": "my-image.jpg",
				"format": "image-filename",
				"description": "Valid filename for images with allowed extensions.\r\nContains only English letters, numbers, hyphens, and underscores.\r\nMust end with a valid image extension (.jpg, .jpeg, .png, .webp, .svg).",
				"pattern": "^[a-zA-Z0-9-_]+\\.(jpg|jpeg|png|webp|svg)$",
				"minLength": 5,
				"maxLength": 255
			},
			"GetItemPicUrlIn": {
				"properties": {
					"restaurantId": {
						"$ref": "#/components/schemas/UUID"
					},
					"branchId": {
						"$ref": "#/components/schemas/UUID"
					},
					"fileName": {
						"$ref": "#/components/schemas/ImageFilename"
					}
				},
				"required": [
					"restaurantId",
					"branchId",
					"fileName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DefaultString": {
				"type": "string",
				"example": "string",
				"minLength": 2,
				"maxLength": 50
			},
			"Slug": {
				"type": "string",
				"example": "my-name",
				"format": "slug",
				"description": "URL-friendly string identifier.\r\nContains only English letters, numbers, and hyphens.",
				"pattern": "^[a-zA-Z0-9-]+$",
				"minLength": 2,
				"maxLength": 50
			},
			"Boolean": {
				"type": "boolean"
			},
			"BacklogCompactOut": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/UUID"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"branchId": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UUID"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"id",
					"createdAt",
					"updatedAt",
					"branchId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BranchCompleteOut": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/UUID"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"restaurantId": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UUID"
							}
						],
						"nullable": true
					},
					"name": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"displayName": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Slug"
							}
						],
						"nullable": true
					},
					"iOpen": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"status": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"rating": {
						"type": "number",
						"format": "double",
						"nullable": true,
						"minimum": 0,
						"maximum": 5
					},
					"showRating": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"instagram": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"telegram": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"twitter": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"youtube": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"eitaa": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"backlog": {
						"allOf": [
							{
								"$ref": "#/components/schemas/BacklogCompactOut"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"id",
					"createdAt",
					"updatedAt",
					"restaurantId",
					"backlog"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RestaurantCompleteOut": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/UUID"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"name": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"displayName": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Slug"
							}
						],
						"nullable": true
					},
					"branches": {
						"items": {
							"$ref": "#/components/schemas/BranchCompleteOut"
						},
						"type": "array",
						"nullable": true
					},
					"slang": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"instagram": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"telegram": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"twitter": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"youtube": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"eitaa": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"avatarUrl": {
						"allOf": [
							{
								"$ref": "#/components/schemas/URL"
							}
						],
						"nullable": true
					},
					"coverUrl": {
						"allOf": [
							{
								"$ref": "#/components/schemas/URL"
							}
						],
						"nullable": true
					},
					"logoUrl": {
						"allOf": [
							{
								"$ref": "#/components/schemas/URL"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"id",
					"createdAt",
					"updatedAt",
					"name",
					"displayName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ErrorDetail": {
				"properties": {
					"field": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"value": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ConstraintsDatabaseError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RestaurantValidationError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RestaurantCompactIn": {
				"properties": {
					"name": {
						"$ref": "#/components/schemas/DefaultString"
					},
					"displayName": {
						"$ref": "#/components/schemas/Slug"
					},
					"slang": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true,
						"pattern": "^[a-zA-Z0-9]*$"
					},
					"instagram": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"telegram": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"twitter": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"youtube": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"eitaa": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"avatarKey": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LongString"
							}
						],
						"nullable": true
					},
					"coverKey": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LongString"
							}
						],
						"nullable": true
					},
					"logoKey": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LongString"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"name",
					"displayName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RestaurantNotFound": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CategoryNameCompleteOut": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/UUID"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"name": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"id",
					"createdAt",
					"updatedAt",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CategoryNameValidationError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CategoryNameCompactIn": {
				"properties": {
					"name": {
						"$ref": "#/components/schemas/DefaultString"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MenuchiError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MenuCompleteOut": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/UUID"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"branchId": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UUID"
							}
						],
						"nullable": true
					},
					"name": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"favicon": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"isPublished": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"id",
					"createdAt",
					"updatedAt",
					"branchId",
					"name",
					"favicon",
					"isPublished"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MenuNotFound": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MenuValidationError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MenuCompactIn": {
				"properties": {
					"name": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"favicon": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"isPublished": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CylinderCompleteOut": {
				"properties": {
					"sat": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"sun": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"mon": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"tue": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"wed": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"thu": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"fri": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"id": {
						"$ref": "#/components/schemas/UUID"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					}
				},
				"required": [
					"id",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CylinderNotFound": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CategoryNotFound": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CylinderValidationError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CylinderCompactIn": {
				"properties": {
					"sat": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"sun": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"mon": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"tue": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"wed": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"thu": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					},
					"fri": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Boolean"
							}
						],
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Int": {
				"type": "integer",
				"format": "int32"
			},
			"MenuCategoryCompleteOut": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/UUID"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"categoryId": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UUID"
							}
						],
						"nullable": true
					},
					"cylinderId": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UUID"
							}
						],
						"nullable": true
					},
					"positionInMenu": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Int"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"id",
					"createdAt",
					"updatedAt",
					"categoryId",
					"cylinderId",
					"positionInMenu"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MenuCategoryValidationError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MenuCategoryCompactIn": {
				"properties": {
					"categoryId": {
						"$ref": "#/components/schemas/UUID"
					},
					"cylinderId": {
						"$ref": "#/components/schemas/UUID"
					},
					"items": {
						"items": {
							"$ref": "#/components/schemas/UUID"
						},
						"type": "array"
					}
				},
				"required": [
					"categoryId",
					"cylinderId",
					"items"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ItemCompleteOut": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/UUID"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"categoryId": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UUID"
							}
						],
						"nullable": true
					},
					"categoryName": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"subCategoryId": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UUID"
							}
						],
						"nullable": true
					},
					"name": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"ingredients": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LongString"
							}
						],
						"nullable": true
					},
					"price": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"picUrl": {
						"allOf": [
							{
								"$ref": "#/components/schemas/URL"
							}
						],
						"nullable": true
					},
					"positionInItemsList": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Int"
							}
						],
						"nullable": true
					},
					"positionInCategory": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Int"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"id",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CategoryNameNotFound": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BacklogNotFound": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ItemValidationError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ItemCompactIn": {
				"properties": {
					"categoryNameId": {
						"$ref": "#/components/schemas/UUID"
					},
					"name": {
						"$ref": "#/components/schemas/DefaultString"
					},
					"ingredients": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LongString"
							}
						],
						"nullable": true
					},
					"price": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"picKey": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LongString"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"categoryNameId",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CategoryCompleteOut": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/UUID"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"backlogId": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UUID"
							}
						],
						"nullable": true
					},
					"categoryName": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"positionInBacklog": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Int"
							}
						],
						"nullable": true
					},
					"items": {
						"items": {
							"$ref": "#/components/schemas/ItemCompleteOut"
						},
						"type": "array",
						"nullable": true
					}
				},
				"required": [
					"id",
					"createdAt",
					"updatedAt",
					"backlogId",
					"categoryName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BacklogCompleteOut": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/UUID"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"branchId": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UUID"
							}
						],
						"nullable": true
					},
					"categories": {
						"items": {
							"$ref": "#/components/schemas/CategoryCompleteOut"
						},
						"type": "array",
						"nullable": true
					}
				},
				"required": [
					"id",
					"createdAt",
					"updatedAt",
					"branchId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateItemIn": {
				"properties": {
					"categoryId": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UUID"
							}
						],
						"nullable": true
					},
					"subCategoryId": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UUID"
							}
						],
						"nullable": true
					},
					"name": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DefaultString"
							}
						],
						"nullable": true
					},
					"ingredients": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LongString"
							}
						],
						"nullable": true
					},
					"price": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"picKey": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LongString"
							}
						],
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "menuchi-node-backend",
		"version": "1.0.0",
		"description": "The NodeJS backend of Menuchi",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/s3/get-item-pic-url": {
			"post": {
				"operationId": "GeneratePutPresignedUrl",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetItemPicUrlOut"
								}
							}
						}
					}
				},
				"tags": [
					"S3"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GetItemPicUrlIn"
							}
						}
					}
				}
			}
		},
		"/restaurants": {
			"post": {
				"operationId": "CreateRestaurant",
				"responses": {
					"201": {
						"description": "Restaurant, a branch and its backlog created successfully.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RestaurantCompleteOut"
								}
							}
						}
					},
					"409": {
						"description": "ConstraintsDatabaseError",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ConstraintsDatabaseError"
								}
							}
						}
					},
					"422": {
						"description": "4221 RestaurantValidationError",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RestaurantValidationError"
								}
							}
						}
					}
				},
				"tags": [
					"Restaurant"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RestaurantCompactIn"
							}
						}
					}
				}
			}
		},
		"/restaurants/{restaurantId}": {
			"get": {
				"operationId": "GetRestaurant",
				"responses": {
					"200": {
						"description": "Restaurant is retrieved successfully.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RestaurantCompleteOut"
								}
							}
						}
					},
					"404": {
						"description": "4041 RestaurantNotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RestaurantNotFound"
								}
							}
						}
					}
				},
				"tags": [
					"Restaurant"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "restaurantId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				]
			}
		},
		"/category-names": {
			"post": {
				"operationId": "CreateCategoryName",
				"responses": {
					"201": {
						"description": "Category name created successfully.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CategoryNameCompleteOut"
								}
							}
						}
					},
					"409": {
						"description": "ConstraintsDatabaseError",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ConstraintsDatabaseError"
								}
							}
						}
					},
					"422": {
						"description": "4222 CategoryNameValidationError",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CategoryNameValidationError"
								}
							}
						}
					}
				},
				"tags": [
					"Category-Name"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CategoryNameCompactIn"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAllCategoryNames",
				"responses": {
					"200": {
						"description": "All category names retrieved successfully.",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/CategoryNameCompleteOut"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Category-Name"
				],
				"security": [],
				"parameters": []
			}
		},
		"/categories/reorder-categories": {
			"patch": {
				"operationId": "ReorderItemsInList",
				"responses": {
					"204": {
						"description": "Category orders in the backlog updated successfully.",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					},
					"400": {
						"description": "All category IDs must be in the request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MenuchiError"
								}
							}
						}
					}
				},
				"tags": [
					"Category"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/UUID"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/categories/{categoryId}": {
			"delete": {
				"operationId": "DeleteItems",
				"responses": {
					"204": {
						"description": "Category and its items deleted successfully.  It doesn't retrieve anything.",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"enum": [
										null
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Category"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "categoryId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				]
			}
		},
		"/branches/{branchId}/menus": {
			"post": {
				"operationId": "CreateMenu",
				"responses": {
					"201": {
						"description": "Menu created successfully.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MenuCompleteOut"
								}
							}
						}
					}
				},
				"tags": [
					"Branch"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "branchId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				]
			}
		},
		"/branches/{branchId}/menus/{menuId}": {
			"patch": {
				"operationId": "UpdateMenu",
				"responses": {
					"204": {
						"description": "Menu updated successfully.",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"enum": [
										null
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "4045 MenuNotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MenuNotFound"
								}
							}
						}
					},
					"422": {
						"description": "4225 MenuValidationError",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MenuValidationError"
								}
							}
						}
					}
				},
				"tags": [
					"Branch"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "branchId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					},
					{
						"in": "path",
						"name": "menuId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MenuCompactIn"
							}
						}
					}
				}
			}
		},
		"/branches/{branchId}/menus/{menuId}/cylinders": {
			"post": {
				"operationId": "CreateCylinder",
				"responses": {
					"201": {
						"description": "Cylinder created successfully.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CylinderCompleteOut"
								}
							}
						}
					},
					"404": {
						"description": "4045 MenuNotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MenuNotFound"
								}
							}
						}
					},
					"409": {
						"description": "ConstraintsDatabaseError",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ConstraintsDatabaseError"
								}
							}
						}
					},
					"422": {
						"description": "4226 CylinderValidationError",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CylinderValidationError"
								}
							}
						}
					}
				},
				"tags": [
					"Branch"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "branchId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					},
					{
						"in": "path",
						"name": "menuId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CylinderCompactIn"
							}
						}
					}
				}
			}
		},
		"/branches/{branchId}/menus/{menuId}/categories": {
			"post": {
				"operationId": "CreateMenuCategory",
				"responses": {
					"201": {
						"description": "Menu Category created successfully.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MenuCategoryCompleteOut"
								}
							}
						}
					},
					"409": {
						"description": "ConstraintsDatabaseError",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ConstraintsDatabaseError"
								}
							}
						}
					},
					"422": {
						"description": "4227 MenuCategoryValidationError",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MenuCategoryValidationError"
								}
							}
						}
					}
				},
				"tags": [
					"Branch"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "branchId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					},
					{
						"in": "path",
						"name": "menuId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MenuCategoryCompactIn"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "ReorderMenuItems",
				"responses": {
					"204": {
						"description": "Menu item orders in the list updated successfully.",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					},
					"400": {
						"description": "All menu item IDs must be in the request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MenuchiError"
								}
							}
						}
					}
				},
				"tags": [
					"Branch"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "branchId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					},
					{
						"in": "path",
						"name": "menuId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/UUID"
								},
								"type": "array"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteMenuCategory",
				"responses": {
					"204": {
						"description": "Menu Categories deleted successfully.",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"enum": [
										null
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Branch"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "branchId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					},
					{
						"in": "path",
						"name": "menuId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/UUID"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/branches/{branchId}/menus/{menuId}/items": {
			"patch": {
				"operationId": "ReorderMenuCategories",
				"responses": {
					"204": {
						"description": "Menu category orders in the list updated successfully.",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					},
					"400": {
						"description": "All menu category IDs must be in the request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MenuchiError"
								}
							}
						}
					}
				},
				"tags": [
					"Branch"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "branchId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					},
					{
						"in": "path",
						"name": "menuId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/UUID"
								},
								"type": "array"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteMenuItem",
				"responses": {
					"204": {
						"description": "Menu Items deleted successfully.",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"enum": [
										null
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Branch"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "branchId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					},
					{
						"in": "path",
						"name": "menuId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/UUID"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/branches/{branchId}/menus/{menuId}/items/{menuItemId}/hide/{isHide}": {
			"patch": {
				"operationId": "HideMenuItem",
				"responses": {
					"204": {
						"description": "Menu Item hide/unhide successfully.",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"enum": [
										null
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Branch"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "branchId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					},
					{
						"in": "path",
						"name": "menuId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					},
					{
						"in": "path",
						"name": "menuItemId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					},
					{
						"in": "path",
						"name": "isHide",
						"required": true,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/backlog/{backlogId}/items": {
			"post": {
				"operationId": "CreateItem",
				"responses": {
					"201": {
						"description": "Item created successfully.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ItemCompleteOut"
								}
							}
						}
					},
					"404": {
						"description": "4044 BacklogNotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BacklogNotFound"
								}
							}
						}
					},
					"422": {
						"description": "4223 ItemValidationError",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ItemValidationError"
								}
							}
						}
					}
				},
				"tags": [
					"Backlog"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "backlogId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ItemCompactIn"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetItems",
				"responses": {
					"200": {
						"description": "All backlog items retrieved successfully.",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ItemCompleteOut"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Backlog"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "backlogId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				]
			}
		},
		"/backlog/{backlogId}": {
			"get": {
				"operationId": "GeBacklog",
				"responses": {
					"200": {
						"description": "Backlog is retrieved successfully.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BacklogCompleteOut"
								}
							}
						}
					},
					"404": {
						"description": "4044 BacklogNotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BacklogNotFound"
								}
							}
						}
					}
				},
				"tags": [
					"Backlog"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "backlogId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				]
			}
		},
		"/backlog/items/{itemId}": {
			"patch": {
				"operationId": "UpdateItem",
				"responses": {
					"204": {
						"description": "Item updated successfully. It doesn't retrieve anything.",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"enum": [
										null
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Backlog"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateItemIn"
							}
						}
					}
				}
			}
		},
		"/backlog/{backlogId}/reorder-items/in-category": {
			"patch": {
				"operationId": "ReorderItemsInCategory",
				"responses": {
					"204": {
						"description": "Item orders in the category updated successfully.",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					},
					"400": {
						"description": "All item IDs must be in the request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MenuchiError"
								}
							}
						}
					}
				},
				"tags": [
					"Backlog"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "backlogId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/UUID"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/backlog/{backlogId}/reorder-items/in-list": {
			"patch": {
				"operationId": "ReorderItemsInList",
				"responses": {
					"204": {
						"description": "Item orders in the list updated successfully.",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					},
					"400": {
						"description": "All item IDs must be in the request.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MenuchiError"
								}
							}
						}
					}
				},
				"tags": [
					"Backlog"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "backlogId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/UUID"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/backlog/items": {
			"delete": {
				"operationId": "DeleteItems",
				"responses": {
					"204": {
						"description": "Items deleted successfully. It doesn't retrieve anything.",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"enum": [
										null
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Backlog"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/UUID"
								},
								"type": "array"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}